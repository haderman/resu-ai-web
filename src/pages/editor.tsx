import styled from 'styled-components';
import type { NextPage } from 'next';
import Link from 'next/link';
import Head from 'next/head';
import { unstable_getServerSession } from 'next-auth';
import { getProviders } from 'next-auth/react';

import { Editor } from '@/components/editor';
import { AuthButtonContainer } from '@/components/common';
import { wrapper } from '@/state/store';
import { sessionSlice } from '@/state/session';
import { authProvidersSlice } from '@/state/auth-providers';
import { apiState } from '@/state/api';

import { authOptions } from './api/auth/[...nextauth]';

export const getServerSideProps = wrapper.getServerSideProps(store => async ({ req, res }) => {
  const session = await unstable_getServerSession(req, res, authOptions);
  store.dispatch(sessionSlice.actions.setSession(session));

  try {
    const providers = await getProviders();
    store.dispatch(authProvidersSlice.actions.setAuthProviders(providers?.github));
  } catch (error) {
    console.error(error);
  }

  // I have to return an object with props otherwise I get a typescript error (I need to understand why)
  return {
    props: {}
  };
});

const EditorPage: NextPage = () => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LoadResume />
      <Container>
        <Header>
          <Title>My CV</Title>
          <Link href="/">Home</Link>
          <ResumaSavingIndicator />
          <AuthButtonContainer />
        </Header>
        <Editor />
      </Container>
    </>
  );
};

function LoadResume() {
  apiState.resume.useGetResumeQuery();

  return null;
}

export default EditorPage;

const Container = styled.div`
  height: 100%;
  display: grid;
  grid-template-rows: 70px 1fr;
`;

const Header = styled.header`
  background-color: hsl(210 10% 5%);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 20px;
  gap: 20px;
`;

const Title = styled.h1`
  font-size: 1.5em;
  text-align: center;
  color: greenyellow;
`;

function ResumaSavingIndicator() {
  const [_, { isLoading }] = apiState.resume.useResumeUpdaters();

  return (
    <span>
      {isLoading ? 'Saving...' : ''}
    </span>
  );
}
